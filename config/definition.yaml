---
#
# Definition of ActivityDescription and EntityDescription
#
# activities:
#   <activity_name>:
#     description:
#     parameters:
#       - name:
#         description:
#         value:       # Python variable that contains the parameter value
#     usage/generation:
#       - entityName:
#         description:
#         value:       # Python variable that contains the value of the entity
#         location:    # Python variable that contains the location of the entity
#                      # any object that may be serialised should have a location property
#                      # location and value properties are not mutually exclusive
#         id:          # Python variable that contains the id of the entity
#         role:
#         has_members:
#           entityName:
#           list:      # Python list object where the members are stored
#           location:
#           value:
#           id:
#           namespace?
#
# entityNames:
#   <entity_name>:
#     description:
#     docurl:
#     contentType:
#     type: PythonObject, File, FileCollection
#     index: index file applicable for a FileCollection

activities:

    get_observations:
        description:
            "Fetch observations from the data store according
            to criteria defined in the configuration"
        parameters:
            - name: datastore
              description: "DataStore path as string"
              value: settings.observations.datastore
            - name: filters
              description: "Filter criteria to select observations"
              value: settings.observations.filters
        usage:
            - entityName: DataStore
              description: "DataStore object file"
              location: settings.observations.datastore
              role: datastore
        generation:
            - entityName: Observations
              description: "Observations selected"
              value: observations
              role: observations selected
              has_members:
                  entityName: Observation
                  list: observations.list
                  id: obs_id
                  location: location(hdu_type="events").path().__str__()
                  namespace: gamma-dl3

    get_datasets:
        description: "Produce reduced datasets"
        parameters:
            - name: stack-datasets
              description: "Stack datasets flag"
              value: settings.datasets.stack-datasets
            - name: dataset-type
              description: "Datasets type"
              value: settings.datasets.dataset-type
            - name: geom
              description: "Geometry parameters"
              value: settings.datasets.geom
            - name: geom-irf
              description: "Geometry parameters in IRFs"
              value: settings.datasets.geom-irf
            - name: background
              description: "Background parameters"
              value: settings.datasets.background
            - name: containment_correction
              description: "Containment_correction used in spectrum extraction"
              value: settings.datasets.containment_correction
            - name: offset-max
              description: "Max offset to produce the dataset cutout"
              value: settings.datasets.offset-max
            - name: psf-kernel-radius
              description: "Radius of PSF kernel used"
              value: settings.datasets.psf-kernel-radius
        usage:
            - entityName: Observations
              description: "Observations selected"
              value: observations
              role: observations selected
            - entityName: Mask
              description: "Exclusion mask for spectral background estimation"
              location: settings.datasets.background.exclusion_mask.filename
              role: exclusion mask
        generation:
            - entityName: ReflectedRegionsBackgroundEstimator
              description: "ReflectedRegionsBackgroundEstimator object"
              value: background_estimator
              role: background estimator
            - entityName: SpectrumExtraction
              description: "SpectrumExtraction object"
              value: extraction
              role: spectrum extraction
            - entityName: Datasets
              description: "Datasets produced in the reduction process"
              value: datasets
              role: reduced datasets
              has_members:
                  entityName: Dataset
                  list: datasets.datasets
                  id: name

    set_model:
        description:
            "Read the model from dict or filename
            and attach it to datasets"
        parameters:
            - name: model
              description: "Model description in YAML format as string"
              value: kwargs.model
            - name: filename
              description: "Filename and path with the YAML model description"
              value: kwargs.filename
        usage:
            - entityName: Datasets
              description: "Datasets produced in the reduction process"
              value: datasets
              role: reduced datasets
        generation:
            - entityName: SkyModel
              description: "Parametric composed model"
              value: model
              role: model
#           TODO add a derived dataset
#           - entityName: Datasets
#             description: "Datasets with initial model"
#             location: datasets
#             role: datasets with model

    run_fit:
        description: "Fitting reduced data sets to model"
        parameters:
            - name: fit_range
              description: "Energy range where to perform the fit"
              value: settings.fit.fit_range
        usage:
            - entityName: Datasets
              description: "Datasets to fit"
              value: datasets
              role: datasets with initial model
        generation:
            - entityName: Fit
              description: "Object that stores fitting parameters"
              value: fit
              role: fit object
            - entityName: FitResult
              description: "Object that stores fitting results parameters"
              value: fit_result
              role: fit result
#           TODO add a derived dataset
#           - entityName: Datasets
#             description: "Datasets fitted to model"
#             location: datasets
#             role: datasets with model

    get_flux_points:
        description: "Calculate flux points"
        parameters:
            - name: source
              description: "Source name parameter in the model component"
              value: args.source
            - name: fp_binning
              description: "Energy binning"
              value: settings.flux-points.fp_binning
        usage:
            - entityName: Datasets
              description: "Datasets where to calculate the flux points"
              value: datasets
              role: datasets with fitted model
            - entityName: SkyModel
              description: "Parametric composed model"
              value: model
              role: model
        generation:
            - entityName: FluxPointsDataset
              description: "Calculated flux points dataset"
              value: flux_points
              role: calculated flux points dataset

entities:
    PythonObject:
        description: "A Python variable in memory"
        type: PythonObject
    DataStore:
        description: "A directory pointing to a collection of files on the disk"
        docurl: https://docs.gammapy.org/dev/api/gammapy.data.DataStore
        type: FileCollection
        index: "obs-index.fits.gz"
    Observations:
        description: "A list of observations"
        docurl: https://docs.gammapy.org/dev/api/gammapy.data.Observations
        type: PythonObject
    Observation:
        description: "An observation from the DataStore with a unique obs_id"
        docurl: https://docs.gammapy.org/dev/api/gammapy.data.DataStoreObservation
        type: PythonObject
    Datasets:
        description: "A list of datasets"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.Datasets
        type: PythonObject
    Dataset:
        description: "A dataset: spectrum, map or flux-points"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.Dataset
        type: PythonObject
    SpectrumExtraction:
        description: "A SpectrumExtraction object"
        docurl: https://docs.gammapy.org/dev/api/gammapy.spectrum.SpectrumExtraction
        type: PythonObject
    ReflectedRegionsBackgroundEstimator:
        description: "A ReflectedRegionsBackgroundEstimator object"
        docurl: https://docs.gammapy.org/dev/api/gammapy.spectrum.ReflectedRegionsBackgroundEstimator
        type: PythonObject
    SkyModel:
        description: "A generic SkyModel"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.models.SkyModelBase
        type: PythonObject
    Fit:
        description: "A Fit object"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.Fit
        type: PythonObject
    FitResult:
        description: "A FitResult object"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.FitResult
        type: PythonObject
    FluxPointsDataset:
        description: "A FluxPointsDataset object"
        docurl: https://docs.gammapy.org/dev/api/gammapy.spectrum.FluxPointsDataset
        type: PythonObject
    Mask:
        description: "A 2D or 3D mask as FITS file"
        contentType: application/fits
        type: File
    File:
        description: "A File on the disk"
        type: File
    FITSFile:
        description: "A FITS File on the disk"
        contentType: application/fits
        type: File
    YAMLFile:
        description: "A YAML File on the disk"
        contentType: application/x-yaml
        type: File
