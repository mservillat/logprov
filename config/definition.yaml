---
#
# Definition of ActivityDescription and EntityDescription
#
# activities:
#   <activity_name>:
#     description:
#     parameters:
#       - name:
#         description:
#         value:       # Python variable that contains the parameter value
#                      # (maybe be nested in an object or dict)
#     usage/generation:
#       - role:
#         description:
#         entityType:
#         location:    # Python variable that contains the location of the entity
#                      #  (e.g. a valid path to a File/DataStore)
#         value:       # Python variable that contains the value of the entity
#         id:          # Python variable that contains the id of the entity
#         has_members:
#           list:      # Python list of the members (e.g. observations.list)
#           entityType:
#           location/value/id:
#
#      filter:
#       - criteria:
#         usage: []
#         generation: []
#
# entityTypes:
#   <entity_name>:
#     description:
#     path:  # default path?
#

activities:

    get_observations:
        description:
            "Fetch observations from the data store according
            to criteria defined in the configuration"
        parameters:
            - name: datastore
              description: "DataStore path as string"
              value: settings.observations.datastore
            - name: filters
              description: "Filter criteria to select observations"
              value: settings.observations.filters
        usage:
            - role: datastore
              description: "DataStore object file"
              entityType: DataStore
              location: settings.observations.datastore
        generation:
            - role: observations selected
              description: "Observations selected"
              entityType: Observations
              value: observations
              has_members:
                  entityType: Observation
                  list: observations.list
                  id: obs_id
                  namespace: ""

    get_datasets:
        description: "Produce reduced datasets"
        parameters:
            - name: stack-datasets
              description: "Stack datasets flag"
              value: settings.datasets.stack-datasets
            - name: dataset-type
              description: "Datasets type"
              value: settings.datasets.dataset-type
            - name: geom
              description: "Geometry parameters"
              value: settings.datasets.geom
            - name: geom-irf
              description: "Geometry parameters in IRFs"
              value: settings.datasets.geom-irf
            - name: background
              description: "Background parameters"
              value: settings.datasets.background
            - name: containment_correction
              description: "Containment_correction used in spectrum extraction"
              value: settings.datasets.containment_correction
            - name: offset-max
              description: "Max offset to produce the dataset cutout"
              value: settings.datasets.offset-max
            - name: psf-kernel-radius
              description: "Radius of PSF kernel used"
              value: settings.datasets.psf-kernel-radius
        usage:
            - role: observations
              description: "Observations selected"
              entityType: Observations
              value: observations
            - role: exclusion_mask
              description: "Exclusion mask for spectral background estimation"
              entityType: File
              location: settings.datasets.background.exclusion_mask.filename
        generation:
            - role: background estimator
              description: "ReflectedRegionsBackgroundEstimator object"
              entityType: ReflectedRegionsBackgroundEstimator
              value: background_estimator
            - role: spectrum extraction
              description: "SpectrumExtraction object"
              entityType: SpectrumExtraction
              value: extraction
            - role: reduced_datasets
              description: "Datasets produced in the reduction process"
              entityType: Datasets
              value: datasets
#              has_members:
#                  entityType: Dataset
#                  list: datasets.datasets
#                  id: name

    set_model:
        description:
            "Read the model from dict or filename
            and attach it to datasets"
        parameters:
            - name: model
              description: "Model description in YAML format as string"
              value: kwargs.model
            - name: filename
              description: "Filename and path with the YAML model description"
              value: kwargs.filename
        usage:
            - role: model_file
              entityType: YAMLFile
              location: kwargs.filename
#            - role: reduced datasets
#              description: "Datasets produced in the reduction process"
#              entityType: Datasets
#              location: datasets
        generation:
            - role: model
              entityType: SkyModel
              value: model
#            - role: datasets with model
#              description: "Datasets with model attached"
#              entityType: Datasets
#              location: datasets

    run_fit:
        description: "Fitting reduced data sets to model"
        parameters:
            - name: fit_range
              value: settings.fit.fit_range
        usage:
            - role: datasets
              description: "Datasets to fit"
              entityType: Datasets
              value: datasets
            - role: model
              entityType: SkyModel
              value: model
        generation:
            - role: fit
              entityType: Fit
              value: fit
            - role: fit_result
              entityType: FitResult
              value: fit_result

    get_flux_points:
        description: "Calculate flux points."
        parameters:
            - name: source
              value: args.source
            - name: fp_binning
              value: settings.flux-points.fp_binning
        usage:
            - role: datasets
              entityType: Datasets
              value: datasets
            - role: model
              entityType: SkyModel
              value: model
            - role: fit_result
              entityType: FitResult
              value: fit_result
        generation:
            - role: calculated flux points dataset
              entityType: FluxPointsDataset
              value: flux_points


# track entities with an id
# .uuid in the object
# hash? __hash__, quasi unique, but per session
# id()? but memory allocation, so may not be unique

entities:
    PythonObject:
        description: "A Python variable in memory"
        type: PythonObject
    DataStore:
        description: "A directory pointing to a collection of files on the disk"
        docurl: https://docs.gammapy.org/dev/api/gammapy.data.DataStore
        type: FileCollection
        index: "obs-index.fits.gz"
    Observations:
        description: "A list of observations"
        docurl: https://docs.gammapy.org/dev/api/gammapy.data.Observations
        type: PythonObject
    Observation:
        description: "An observation from the DataStore with a unique obs_id"
        docurl: https://docs.gammapy.org/dev/api/gammapy.data.DataStoreObservation
        type: File
    Dataset:
        description: "A dataset: spectrum, map or flux-points"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.Dataset
        type: PythonObject
    Datasets:
        description: "A list of datasets"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.Datasets
        type: PythonObject
    SpectrumExtraction:
        description: "A SpectrumExtraction object"
        docurl: https://docs.gammapy.org/dev/api/gammapy.spectrum.SpectrumExtraction
        type: PythonObject
    ReflectedRegionsBackgroundEstimator:
        description: "A ReflectedRegionsBackgroundEstimator object"
        docurl: https://docs.gammapy.org/dev/api/gammapy.spectrum.ReflectedRegionsBackgroundEstimator
        type: PythonObject
    SkyModel:
        description: "A generic SkyModel"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.models.SkyModelBase
        type: PythonObject
    Fit:
        description: "A Fit object"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.Fit
        type: PythonObject
    FitResult:
        description: "A FitResult object"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.FitResult
        type: PythonObject
    FluxPointsDataset:
        description: "A FluxPointsDataset object"
        docurl: https://docs.gammapy.org/dev/api/gammapy.spectrum.FluxPointsDataset
        type: PythonObject
    File:
        description: "A File on the disk"
        type: File
    FITSFile:
        description: "A FITS File on the disk"
        contentType: application/fits
        type: File
    YAMLFile:
        description: "A YAML File on the disk"
        contentType: application/x-yaml
        type: File
