---
#
# Definition of ActivityDescription and EntityDescription
#
# activities:
#   <activity_name>:
#     description:
#     contact:
#     parameters:
#       - name:
#         description:
#         value:         # Python variable that contains the parameter value
#         datatype/arraysize/xtype:
#         unit/ucd/utype:
#         min/max/options/default:
#     usage/generation:
#       - role:
#         description:
#         entityType:
#         multiplicity:
#         location:      # Python variable that contains the location of the entity
#                        # any object that may be serialised should have a location property
#                        # location and value properties are not mutually exclusive
#         value:         # Python variable that contains the value of the entity
#         id:            # Python variable that contains the id of the entity
#         has_members:
#           list:        # Python list of members
#           entityType:
#           location:
#           value:
#           id:
#           namespace:
#         has_progenitors:
#           list:        # Python list of progenitors
#           entityType:
#           location:
#           value:
#           id:
#           namespace:
#
# entities:
#   <entity_name>:
#     description:
#     docurl:
#     contentType:
#     type: PythonObject, File, FileCollection
#     index: index file applicable for a FileCollection
#
# agents:
#   <agent_name>:
#     email:
#

activities:

    get_observations:
        description:
            "Fetch observations from the data store according
            to criteria defined in the configuration"
        parameters:
            - name: datastore_path
              description: "DataStore path as string"
              value: settings.observations.datastore
            - name: filters
              description: "Filter criteria to select observations"
              value: settings.observations.filters
        usage:
            - role: datastore
              description: "DataStore object file"
              entityName: DataStore
              location: settings.observations.datastore
        generation:
            - role: selected_observations
              description: "Observations selected"
              entityName: Observations
              value: observations
              has_members:
                  list: observations.list
                  entityName: Observation
                  id: obs_id
                  location: location(hdu_type="events").path().__str__()
                  namespace: gamma-events

    get_datasets:
        description: "Produce reduced datasets"
        parameters:
            - name: stack-datasets
              description: "Stack datasets flag"
              value: settings.datasets.stack-datasets
            - name: dataset-type
              description: "Datasets type"
              value: settings.datasets.dataset-type
            - name: geom
              description: "Geometry parameters"
              value: settings.datasets.geom
            - name: geom-irf
              description: "Geometry parameters in IRFs"
              value: settings.datasets.geom-irf
            - name: background
              description: "Background parameters"
              value: settings.datasets.background
            - name: containment_correction
              description: "Containment_correction used in spectrum extraction"
              value: settings.datasets.containment_correction
            - name: offset-max
              description: "Max offset to produce the dataset cutout"
              value: settings.datasets.offset-max
            - name: psf-kernel-radius
              description: "Radius of PSF kernel used"
              value: settings.datasets.psf-kernel-radius
        usage:
            - role: observations_selected
              description: "Observations selected"
              entityName: Observations
              value: observations
            - role: exclusion_mask
              description: "Exclusion mask for spectral background estimation"
              entityName: Mask
              location: settings.datasets.background.exclusion_mask.filename
        generation:
            - role: background_estimator
              description: "ReflectedRegionsBackgroundEstimator object"
              entityName: ReflectedRegionsBackgroundEstimator
              value: background_estimator
            - role: spectrum_extraction
              description: "SpectrumExtraction object"
              entityName: SpectrumExtraction
              value: extraction
            - role: reduced_datasets
              description: "Datasets produced in the reduction process"
              entityName: Datasets
              value: datasets
              has_progenitors:
                  list: datasets.datasets
                  entityName: Observation
                  id: name
                  namespace: gamma-events

    set_model:
        description:
            "Read the model from dict or filename
            and attach it to datasets"
        parameters:
            - name: model
              description: "Model description in YAML format as string"
              value: kwargs.model
            - name: filename
              description: "Filename and path with the YAML model description"
              value: kwargs.filename
        usage:
            - role: model_file
              entityType: YAMLFile
              location: kwargs.filename
#            - role: reduced datasets
#              description: "Datasets produced in the reduction process"
#              entityName: Datasets
#              value: datasets
        generation:
            - role: model
              description: "Parametric composed model"
              entityName: SkyModel
              value: model
#           TODO add a derived dataset
#           - role: datasets with model
#             description: "Datasets with initial model"
#             entityName: Datasets
#             location: datasets


    run_fit:
        description: "Fitting reduced data sets to model"
        parameters:
            - name: fit_range
              description: "Energy range where to perform the fit"
              value: settings.fit.fit_range
            - name: optimize_opts
              description: "Options passed to `Fit.optimize`."
              value: kwargs.optimize_opts
        usage:
            - role: datasets
              description: "Datasets to fit with initial model"
              entityName: Datasets
              value: datasets
            - role: model
              description: "Parametric composed model"
              entityName: SkyModel
              value: model
        generation:
            - role: fit object
              description: "Object that stores fitting parameters"
              entityName: Fit
              value: fit
            - role: fit result
              description: "Object that stores fitting results parameters"
              entityName: FitResult
              value: fit_result
            - role: fitted_model
              description: "Parametric composed model fitted on datasets"
              entityName: SkyModel
              value: model
#           TODO add a derived dataset
#           - entityName: Datasets
#             description: "Datasets fitted to model"
#             location: datasets
#             role: datasets with model

    get_flux_points:
        description: "Calculate flux points"
        parameters:
            - name: source
              description: "Source name parameter in the model component"
              value: args.source
            - name: fp_binning
              description: "Energy binning"
              value: settings.flux-points.fp_binning
        usage:
            - role: datasets
              description: "Datasets with fitted model where to calculate the flux points"
              entityName: Datasets
              value: datasets
            - role: model
              description: "Parametric composed model"
              entityName: SkyModel
              value: model
        generation:
            - role: flux_points_dataset
              description: "Calculated flux points dataset"
              entityName: FluxPointsDataset
              value: flux_points

entities:
    PythonObject:
        description: "A Python variable in memory"
        type: PythonObject
    DataStore:
        description: "A directory pointing to a collection of files on the disk"
        docurl: https://docs.gammapy.org/dev/api/gammapy.data.DataStore
        type: FileCollection
        index: "obs-index.fits.gz"
    Observations:
        description: "A list of observations"
        docurl: https://docs.gammapy.org/dev/api/gammapy.data.Observations
        type: PythonObject
    Observation:
        description: "An observation from the DataStore with a unique obs_id"
        docurl: https://docs.gammapy.org/dev/api/gammapy.data.DataStoreObservation
        type: PythonObject
    Datasets:
        description: "A list of datasets"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.Datasets
        type: PythonObject
    Dataset:
        description: "A dataset: spectrum, map or flux-points"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.Dataset
        type: PythonObject
    SpectrumExtraction:
        description: "A SpectrumExtraction object"
        docurl: https://docs.gammapy.org/dev/api/gammapy.spectrum.SpectrumExtraction
        type: PythonObject
    ReflectedRegionsBackgroundEstimator:
        description: "A ReflectedRegionsBackgroundEstimator object"
        docurl: https://docs.gammapy.org/dev/api/gammapy.spectrum.ReflectedRegionsBackgroundEstimator
        type: PythonObject
    SkyModel:
        description: "A generic SkyModel"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.models.SkyModelBase
        type: PythonObject
    Fit:
        description: "A Fit object"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.Fit
        type: PythonObject
    FitResult:
        description: "A FitResult object"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.FitResult
        type: PythonObject
    FluxPointsDataset:
        description: "A FluxPointsDataset object"
        docurl: https://docs.gammapy.org/dev/api/gammapy.spectrum.FluxPointsDataset
        type: PythonObject
    Mask:
        description: "A 2D or 3D mask as FITS file"
        contentType: application/fits
        type: File
    File:
        description: "A File on the disk"
        type: File
    FITSFile:
        description: "A FITS File on the disk"
        contentType: application/fits
        type: File
    YAMLFile:
        description: "A YAML File on the disk"
        contentType: application/x-yaml
        type: File
