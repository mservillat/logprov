---
#
# Definition of ActivityDescription and EntityDescription
#
# activity_descriptions:
#   <activity_name>:
#     description:
#     contact:
#     parameters:
#       - name:
#         description:
#         value:         # Python variable that contains the parameter value
#         datatype/arraysize/xtype:
#         unit/ucd/utype:
#         min/max/options/default:
#     usage/generation:
#       - role:
#         description:
#         entityType:
#         multiplicity:
#         location:      # Python variable that contains the location of the entity
#                        # any object that may be serialised should have a location property
#                        # location and value properties are not mutually exclusive
#         value:         # Python variable that contains the value of the entity
#         id:            # Python variable that contains the id of the entity
#         namespace:
#         has_members:
#           list:        # Python list of members /not mandatory
#           entityType:
#           location:
#           value:
#           id:
#           namespace:
#         has_progenitors:
#           list:        # Python list of progenitors /not mandatory
#           entityType:
#           location:
#           value:
#           id:
#           namespace:
#
# entity_descriptions:
#   <entity_name>:
#     description:
#     docurl:
#     contentType:
#     type: PythonObject, File, FileCollection
#     index: index file applicable for a FileCollection
#
# agents:
#   <agent_name>:
#     email:
#

activity_descriptions:

    get_observations:
        description:
            "Fetch observations from the data store according
            to criteria defined in the configuration"
        parameters:
            - value: settings.observations.datastore
              description: "DataStore path as string"
            - value: settings.observations.filters
              description: "Filter criteria to select observations"
        usage:
            - role: datastore
              description: "DataStore object file"
              entity_description: DataStore
              location: settings.observations.datastore
        generation:
            - role: observations_selected
              description: "Observations selected"
              entity_description: Observations
              value: observations
              has_members:
                  list: observations.list
                  entity_description: Observation
                  id: obs_id
                  location: location(hdu_type="events").path().__str__()
                  namespace: gamma-events

    get_datasets:
        description: "Produce reduced datasets"
        parameters:
            - value: settings.datasets.stack-datasets
              description: "Stack datasets flag"
            - value: settings.datasets.dataset-type
              description: "Datasets type"
            - value: settings.datasets.geom
              description: "Geometry parameters"
            - value: settings.datasets.geom-irf
              description: "Geometry parameters in IRFs"
            - value: settings.datasets.background
              description: "Background parameters"
            - value: settings.datasets.containment_correction
              description: "Containment_correction used in spectrum extraction"
            - value: settings.datasets.offset-max
              description: "Max offset to produce the dataset cutout"
            - value: settings.datasets.psf-kernel-radius
              description: "Radius of PSF kernel used"
        usage:
            - role: observations_selected
              description: "Observations selected"
              entity_description: Observations
              value: observations
            - role: exclusion_mask
              description: "Exclusion mask for spectral background estimation"
              entity_description: Mask
              location: settings.datasets.background.exclusion_mask.filename
        generation:
            - role: reduced_datasets
              description: "Datasets produced in the reduction process"
              entity_description: Datasets
              value: datasets
# TODO handle name properties in gammapy
              has_members:
                  list: datasets
                  entity_description: Dataset
                  id: name
#                  id: __hash__().__abs__()
#              has_progenitors:
#                  entity_description: Observations
#                  value: observations

    set_model:
        description:
            "Read the model from dict or filename
            and attach it to datasets"
        parameters:
            - value: kwargs.model
              description: "Model description in YAML format as string"
            - value: kwargs.filename
              description: "Filename and path with the YAML model description"
        usage:
            - role: model_file
              entity_description: YAMLFile
              location: kwargs.filename
            - role: reduced_datasets
              description: "Datasets produced in the reduction process"
              entity_description: Datasets
              value: datasets
        generation:
            - role: initial_model
              description: "Parametric composed model"
              entity_description: SkyModel
              value: model
#           TODO this is a derived dataset
            - role: datasets_with_initial_model
              description: "Datasets with initial model"
              entity_description: Datasets
              value: datasets

    run_fit:
        description: "Fitting reduced data sets to model"
        parameters:
            - value: settings.fit.fit_range
              description: "Energy range where to perform the fit"
            - value: kwargs.optimize_opts
              description: "Options passed to `Fit.optimize`."
        usage:
            - role: datasets
              description: "Datasets with initial model"
              entity_description: Datasets
              value: datasets
        generation:
            - role: fit_object
              description: "Object that stores fitting parameters"
              entity_description: Fit
              value: fit
            - role: fit_result
              description: "Object that stores fitting results parameters"
              entity_description: FitResult
              value: fit_result
#           TODO this is a derived model
            - role: fitted_model
              description: "Parametric composed model fitted on datasets"
              entity_description: SkyModel
              value: model
#           TODO this is a derived dataset
            - role: datasets_with_fitted_model
              description: "Datasets fitted to model"
              entity_description: Datasets
              value: datasets

    get_flux_points:
        description: "Calculate flux points"
        parameters:
            - value: kwargs.source
              description: "Source name parameter in the model component"
            - value: settings.flux-points.fp_binning
              description: "Energy binning"
        usage:
            - role: datasets
              description: "Datasets with fitted model where to calculate the flux points"
              entity_description: Datasets
              value: datasets
            - role: fitted_model
              description: "Parametric composed model"
              entity_description: SkyModel
              value: model
        generation:
            - role: flux_points_dataset
              description: "Calculated flux points dataset"
              entity_description: FluxPointsDataset
              value: flux_points

entity_descriptions:
    PythonObject:
        description: "A Python variable in memory"
        type: PythonObject
    File:
        description: "A File on the disk"
        type: File
    FileCollection:
        description: "A Collection of files on the disk"
        type: FileCollection
    DataStore:
        description: "A directory pointing to a collection of files on the disk"
        docurl: https://docs.gammapy.org/dev/api/gammapy.data.DataStore
        type: FileCollection
        index: "obs-index.fits.gz"
    Observations:
        description: "A list of observations"
        docurl: https://docs.gammapy.org/dev/api/gammapy.data.Observations
        type: PythonObject
    Observation:
        description: "An observation from the DataStore with a unique obs_id"
        docurl: https://docs.gammapy.org/dev/api/gammapy.data.DataStoreObservation
        type: File
        contentType: application/fits
    Datasets:
        description: "A list of datasets"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.Datasets
        type: PythonObject
    Dataset:
        description: "A dataset: spectrum, map or flux-points"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.Dataset
        type: PythonObject
    SkyModel:
        description: "A generic SkyModel"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.models.SkyModelBase
        type: PythonObject
    Fit:
        description: "A Fit object"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.Fit
        type: PythonObject
    FitResult:
        description: "A FitResult object"
        docurl: https://docs.gammapy.org/dev/api/gammapy.modeling.FitResult
        type: PythonObject
    FluxPointsDataset:
        description: "A FluxPointsDataset object"
        docurl: https://docs.gammapy.org/dev/api/gammapy.spectrum.FluxPointsDataset
        type: PythonObject
    Mask:
        description: "A 2D or 3D mask as FITS file"
        type: File
        contentType: application/fits
    FITSFile:
        description: "A FITS File on the disk"
        type: File
        contentType: application/fits
    YAMLFile:
        description: "A YAML File on the disk"
        type: File
        contentType: application/x-yaml

namespaces:
  gamma-events: http://localhost/